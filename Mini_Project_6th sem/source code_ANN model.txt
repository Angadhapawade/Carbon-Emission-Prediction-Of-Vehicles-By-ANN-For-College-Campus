## IMPORTING DATA SET
from google.colab import files
uploaded = files.upload()


## IMPORTING PANDAS
import pandas as pd
import numpy as np
path = "/content/drive/MyDrive/data set 123.csv"
data = pd.read_csv(path)


## PRINTING FIRST 10 ROWS
print(data.head(10))
print(data.info())

## check if any null value is present
data.isnull().values.any()

## SUMMARY OF DATA
summary = data.describe()
summary = summary.transpose()
print(summary)

## STANDARDISED DATA FROM 0 TO 1
from sklearn import preprocessing
x = data.values   # Returns numpy array
min_max_scaler = preprocessing.MinMaxScaler()
x_scaled = min_max_scaler.fit_transform(x)
data = pd.DataFrame(x_scaled)
print(data)

X = data.drop(labels=[3,1],axis=1)
print(X)

Y = data.drop(labels=[0,2],axis=1)
print(Y)

## SPLITS DATA INTO TRAIN AND TEST DATA RESP.
from sklearn.model_selection import train_test_split

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.20, random_state = 5)
print('X train shape = ',X_train.shape)
print('X test shape = ',X_test.shape)
print('Y train shape = ',Y_train.shape)
print('X test shape = ',Y_test.shape)

import keras
from keras.models import Sequential
from keras.layers import Dense
from keras import metrics
model = Sequential()
model.add(Dense(10,input_dim=2,activation='relu'))
model.add(Dense(20,activation='relu'))
model.add(Dense(2,activation='relu'))

## COMPILE ANN
model.compile(optimizer="Adam",loss='mean_squared_error',metrics=['accuracy'])

## FIT AND DISPLAY THE SUMMARY
model.fit(X_train,Y_train,epochs=1000,verbose=1)

model.summary()


## TESTING AND TEST DATASET
Y_predKM = model.predict(X_test)
score = model.evaluate(X_test,Y_test, verbose=0)
print(score[0])